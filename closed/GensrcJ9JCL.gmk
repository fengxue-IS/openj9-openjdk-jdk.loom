# ===========================================================================
# (c) Copyright IBM Corp. 2020, 2022 All Rights Reserved
# ===========================================================================
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.
#
# IBM designates this particular file as subject to the "Classpath" exception
# as provided by IBM in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, see <http://www.gnu.org/licenses/>.
# ===========================================================================

.PHONY : all

all :

include $(SPEC)
include $(TOPDIR)/make/common/MakeBase.gmk

J9TOOLS_DIR := $(SUPPORT_OUTPUTDIR)/j9tools
JPP_JAR     := $(J9TOOLS_DIR)/jpp.jar

RecursiveWildcard = $(foreach dir,$(wildcard $1/*),$(call RecursiveWildcard,$(dir),$2) $(filter $(subst *,%,$2),$(dir)))
AllJclSource = $(call RecursiveWildcard,$(OPENJ9_TOPDIR)/jcl/src,*.java)

ifeq (true,$(OPENJ9_ENABLE_DDR))
  AllDdrSource = $(call RecursiveWildcard,$(OPENJ9_TOPDIR)/debugtools/DDR_VM/src,*.java)
else
  AllDdrSource =
endif # OPENJ9_ENABLE_DDR

JPP_TAGS := PLATFORM-$(OPENJ9_PLATFORM_CODE)

ifeq (true,$(OPENJ9_ENABLE_CRIU_SUPPORT))
  JPP_TAGS += CRIU_SUPPORT
endif # OPENJ9_ENABLE_CRIU_SUPPORT

ifeq (true,$(OPENJ9_ENABLE_INLINE_TYPES))
  JPP_TAGS += INLINE-TYPES
endif # OPENJ9_ENABLE_INLINE_TYPES

ifeq (true,$(OPENJ9_ENABLE_OPENJDK_THREAD_SUPPORT))
  JPP_TAGS += OPENJDK_THREAD_SUPPORT
else ifeq (true,$(OPENJ9_ENABLE_LOOM_SUPPORT))
  # Project Loom support requires OpenJDk thread support
  JPP_TAGS += OPENJDK_THREAD_SUPPORT
endif # OPENJ9_ENABLE_OPENJDK_THREAD_SUPPORT

ifeq (true,$(OPENJ9_ENABLE_LOOM_SUPPORT))
  JPP_TAGS += LOOM_SUPPORT
endif # OPENJ9_ENABLE_LOOM_SUPPORT

# OpenJ9 CRIU only supports Linux, so we only need to consider the unix sub-directory.
OPENJDK_SOURCE_PROCESS_ENVIRONMENT := $(TOPDIR)/src/java.base/unix/classes/java/lang/ProcessEnvironment.java
OPENJDK_STAGED_PROCESS_ENVIRONMENT := $(patsubst $(TOPDIR)/%,$(SUPPORT_OUTPUTDIR)/overlay/%,$(OPENJDK_SOURCE_PROCESS_ENVIRONMENT))

$(OPENJDK_STAGED_PROCESS_ENVIRONMENT) : $(OPENJDK_SOURCE_PROCESS_ENVIRONMENT)
	$(call install-file)

# invoke JPP to generate J9JCL sources
define jpp_generate_sources
	@$(BOOT_JDK)/bin/java \
		-cp "$(call FixPath,$(JPP_JAR))" \
		-Dfile.encoding=US-ASCII \
		com.ibm.jpp.commandline.CommandlineBuilder \
			-verdict \
			-baseDir "$(call FixPath,$1)/" \
			-config JAVA$(VERSION_FEATURE) \
			-srcRoot $2/ \
			-xml "$(call FixPath,$(OPENJ9_TOPDIR)/jcl/jpp_configuration.xml)" \
			-dest "$(call FixPath,$(J9JCL_SOURCES_DIR))" \
			-tag:define "$(subst $(SPACE),;,$(sort $(JPP_TAGS)))"
endef

$(J9JCL_SOURCES_DONEFILE) : $(AllJclSource) $(AllDdrSource) $(OPENJDK_STAGED_PROCESS_ENVIRONMENT)
	@$(ECHO) Building OpenJ9 Java Preprocessor
	@$(MKDIR) -p $(J9TOOLS_DIR)
	$(MAKE) $(MAKE_ARGS) -C $(OPENJ9_TOPDIR)/sourcetools -f buildj9tools.mk \
		BOOT_JDK=$(BOOT_JDK) \
		DEST_DIR=$(call FixPath,$(J9TOOLS_DIR)) \
		JAVA_HOME=$(BOOT_JDK) \
		preprocessor
	@$(ECHO) Generating J9JCL sources
	$(call jpp_generate_sources,$(call FixPath,$(OPENJ9_TOPDIR)),jcl)
	$(call jpp_generate_sources,$(call FixPath,$(SUPPORT_OUTPUTDIR)),overlay)
  ifeq (true,$(OPENJ9_ENABLE_DDR))
	@$(ECHO) Generating DDR_VM sources
	@$(BOOT_JDK)/bin/java \
		-cp "$(call FixPath,$(JPP_JAR))" \
		-Dfile.encoding=US-ASCII \
		com.ibm.jpp.commandline.CommandlineBuilder \
			-includeIfUnsure \
			-noWarnIncludeIf \
			-verdict \
			-baseDir "$(call FixPath,$(OPENJ9_TOPDIR)/debugtools)/" \
			-config DDR_VM \
			-srcRoot DDR_VM/ \
			-xml "$(call FixPath,$(OPENJ9_TOPDIR)/jcl/jpp_configuration.xml)/" \
			-dest "$(call FixPath,$(J9JCL_SOURCES_DIR)/openj9.dtfj/share/classes)" \
			-macro:define "JAVA_SPEC_VERSION=$(VERSION_FEATURE)" \
			-tag:define "$(subst $(SPACE),;,$(sort $(JPP_TAGS)))"
  endif # OPENJ9_ENABLE_DDR
	@$(MKDIR) -p $(@D)
	@$(TOUCH) $@

all : $(J9JCL_SOURCES_DONEFILE)
